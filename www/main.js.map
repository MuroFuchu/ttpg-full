{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/modules/children/httpTest/httpTest.css","webpack:///./src/app/modules/children/httpTest/httpTest.html","webpack:///./src/app/modules/children/httpTest/httpTest.ts","webpack:///./src/app/modules/children/map/map.css","webpack:///./src/app/modules/children/map/map.html","webpack:///./src/app/modules/children/map/map.ts","webpack:///./src/app/modules/children/menu/menu.css","webpack:///./src/app/modules/children/menu/menu.html","webpack:///./src/app/modules/children/menu/menu.ts","webpack:///./src/app/modules/children/registrationList/registrationList.css","webpack:///./src/app/modules/children/registrationList/registrationList.html","webpack:///./src/app/modules/children/registrationList/registrationList.ts","webpack:///./src/app/modules/children/timeTrip/timeTrip.css","webpack:///./src/app/modules/children/timeTrip/timeTrip.html","webpack:///./src/app/modules/children/timeTrip/timeTrip.ts","webpack:///./src/app/modules/children/upload/upload.html","webpack:///./src/app/modules/children/upload/upload.ts","webpack:///./src/app/services/DexieServiceEx.ts","webpack:///./src/app/services/GetJsonService.ts","webpack:///./src/app/services/GoogleMapsAPIWrapperEx.ts","webpack:///./src/app/services/HttpService.ts","webpack:///./src/app/services/IndexedDbService.ts","webpack:///./src/app/services/ReduceImageSizeService.ts","webpack:///./src/app/services/ngx-dexie/dexie.database.ts","webpack:///./src/app/services/ngx-dexie/dexie.module.ts","webpack:///./src/app/services/ngx-dexie/dexie.service.ts","webpack:///./src/app/services/ngx-dexie/index.js","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<ons-navigator animation=\\\"slide\\\" swipeable [page]=\\\"initialPage\\\"></ons-navigator>\\n\"","module.exports = \"\"","import { OnInit, Component , Injectable } from '@angular/core';\r\nimport * as ons from 'onsenui';\r\n\r\nimport { Menu } from './modules/children/menu/menu';\r\nimport { IndexedDbService } from './services/IndexedDbService';\r\nimport { GetJsonService } from './services/GetJsonService';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  constructor(private indexedDbService: IndexedDbService, private getJsonService:GetJsonService) {}\r\n\r\n  async ngOnInit() {\r\n    \r\n    var flg = await this.CheckInitData();\r\n\r\n    if(flg) {\r\n      console.log('データ初期化するよ');\r\n      //var MstLocationInfo = await this.getJsonService.GetJson('MstLocation').toPromise();\r\n      //console.log(MstLocationInfo);\r\n      //this.indexedDbService.addMultipleLocationInfo(MstLocationInfo);\r\n      \r\n      //var TrnPhotoInfo = await this.getJsonService.GetJson('TrnPhoto').toPromise();\r\n      //console.log(TrnPhotoInfo);\r\n      //this.indexedDbService.addMultiplePhotoInfo(TrnPhotoInfo);\r\n      this.indexedDbService.cheakedInitData();\r\n    }\r\n    \r\n  }\r\n\r\n  async CheckInitData() {\r\n    var ret = await this.indexedDbService.cheakInitData();\r\n\r\n    return ret;\r\n  } \r\n\r\n  initialPage = Menu;\r\n}\r\n","// Application code starts here\r\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\nimport { HttpModule } from '@angular/http';\r\nimport { AgmCoreModule } from '@agm/core';\r\n\r\nimport {OnsenModule} from 'ngx-onsenui';\r\n\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { AppComponent } from './app.component';\r\n\r\n// Add\r\nimport { Menu } from './modules/children/menu/menu';\r\nimport { Map } from './modules/children/map/map';\r\nimport { RegistrationList } from './modules/children/registrationList/registrationList';\r\nimport { Upload } from './modules/children/upload/upload';\r\nimport { TimeTrip } from './modules/children/timeTrip/timeTrip';\r\nimport { httpTest } from './modules/children/httpTest/httpTest';\r\n\r\n// Service\r\nimport { IndexedDbService } from './services/IndexedDbService';\r\nimport { DexieServiceEx } from './services/DexieServiceEx';\r\nimport { GetJsonService } from './services/GetJsonService';\r\nimport { GoogleMapsAPIWrapperEx } from './services/GoogleMapsAPIWrapperEx';\r\nimport { DexieModule, DexieConfig } from './services/ngx-dexie';\r\nimport { HttpService } from \"./services/HttpService\";\r\nimport { ReduceImageSizeService } from 'src/app/services/ReduceImageSizeService';\r\n \r\nconst config: DexieConfig = {\r\n  databaseName: 'TimeTripPhotoGallery',//your database name here\r\n  schema: {\r\n    CheakInitData: '++ID',\r\n    TrnPhotoInfo: '++PhotoID,Year,LocationID,Comment,Bin,LastUpdateDateTime',\r\n    MstLocationInfo: '++LocationID,Title,Address,Latitude,Longitude'\r\n  } // any schema of your choice\r\n};\r\n\r\n@NgModule({\r\n  imports: [\r\n    BrowserModule,\r\n    OnsenModule,\r\n    AgmCoreModule.forRoot({\r\n        apiKey: 'AIzaSyCju8LIyDfOiDbk53jDrNnW1ifs7F-4tEU'\r\n      }),\r\n     HttpModule,\r\n     HttpClientModule,\r\n     CommonModule,\r\n     FormsModule,\r\n     DexieModule.forRoot(config)\r\n  ],\r\n  declarations: [\r\n    AppComponent,\r\n    Menu,\r\n    Map,\r\n    RegistrationList,\r\n    Upload,\r\n    TimeTrip,\r\n    httpTest,\r\n  ],\r\n  entryComponents: [\r\n    Menu,\r\n    Map,\r\n    RegistrationList,\r\n    Upload,\r\n    TimeTrip,\r\n    httpTest,\r\n  ],\r\n  providers: [\r\n    IndexedDbService,\r\n    DexieServiceEx,\r\n    GetJsonService,\r\n    GoogleMapsAPIWrapperEx,\r\n    HttpService,\r\n    ReduceImageSizeService,\r\n  ],\r\n  bootstrap: [AppComponent],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \".content{\\r\\n  background-color:#f9d3d3;\\r\\n}\\r\\n.menu_title{\\r\\n  text-align:center;\\r\\n  font-family:Impact;\\r\\n  font-size:50px;\\r\\n  color:brown;\\r\\n  margin:40px 0 10px 0;\\r\\n}\\r\\n.content ons-button{\\r\\n  width:220px;\\r\\n  height:90px;\\r\\n  line-height: 20px;\\r\\n  margin:13px;\\r\\n  padding-top:10px;\\r\\n  font-size:25px;\\r\\n  padding-top:30px;\\r\\n}\\r\\n.material-icons{\\r\\n  font-size:45px;\\r\\n  line-height:0.8px;\\r\\n}\\r\\n.menu_btn_Time_Trip{\\r\\n  background-color:#ffb553;\\r\\n}\\r\\n.menu_btn_Registrations{\\r\\n  background-color:#4bb5e0;\\r\\n}\\r\\n.menu_btn_map{\\r\\n  background-color:#ff716e;\\r\\n}\\r\\n.menu_btn_Upload{\\r\\n  background-color:#34314b;\\r\\n}\"","module.exports = \"\\r\\n<ons-toolbar>\\r\\n  <div class=\\\"center\\\" (click)=\\\"goToMenu()\\\">Menu</div>\\r\\n</ons-toolbar>\\r\\n<div class=\\\"content\\\">\\r\\n  <div class=\\\"menu_title\\\">\\r\\n    Http Request\\r\\n    <br>\\r\\n    Test\\r\\n  </div>\\r\\n  <div style=\\\"text-align: center; margin: 10px\\\">\\r\\n    <ons-input placeholder=\\\"引数１\\\" [(value)]=\\\"arg1\\\"></ons-input>\\r\\n    <ons-input placeholder=\\\"引数２\\\" [(value)]=\\\"arg2\\\"></ons-input>\\r\\n    <ons-input placeholder=\\\"引数３\\\" [(value)]=\\\"arg3\\\"></ons-input>\\r\\n    <ons-input placeholder=\\\"引数４\\\" [(value)]=\\\"arg4\\\"></ons-input>\\r\\n  </div>\\r\\n  <div style=\\\"text-align: center; margin: 10px\\\">\\r\\n    <ons-button (click)=\\\"goGetLocation()\\\" class=\\\"menu_btn_Time_Trip\\\">\\r\\n      <i class=\\\"material-icons\\\">location_on</i><br>GetLocation\\r\\n    </ons-button>\\r\\n    <br>\\r\\n    <ons-button (click)=\\\"goAddLocation()\\\" class=\\\"menu_btn_Registrations\\\">\\r\\n      <i class=\\\"material-icons\\\">add_location</i><br>AddLocation\\r\\n    </ons-button>\\r\\n    <br>\\r\\n    <ons-button (click)=\\\"goGetPhoto()\\\"  class=\\\"menu_btn_map\\\">\\r\\n        <i class=\\\"material-icons\\\">photo</i><br>GetPhoto\\r\\n    </ons-button>\\r\\n    <br>\\r\\n    <ons-button (click)=\\\"goAddPhoto()\\\" class=\\\"menu_btn_Upload\\\">\\r\\n      <i class=\\\"material-icons\\\">add_photo_alternate</i><br>AddPhoto\\r\\n    </ons-button>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import {Component} from '@angular/core';\r\nimport * as ons from 'onsenui';\r\nimport {OnsNavigator,OnsenModule} from 'ngx-onsenui' \r\n\r\nimport {Map} from '../map/map';\r\nimport {RegistrationList} from '../registrationList/registrationList';\r\nimport {Upload} from '../upload/upload';\r\nimport { TimeTrip } from '../timeTrip/timeTrip';\r\n\r\nimport {IndexedDbService} from '../../../services/IndexedDbService';//ﾃﾞｭｸｼ\r\nimport { HttpService } from 'src/app/services/HttpService';\r\nimport { Menu } from '../menu/menu';\r\nimport { Local } from 'protractor/built/driverProviders';\r\n\r\n@Component({\r\n  selector: \"ons-page[title='httpTest']\",\r\n  templateUrl: './httpTest.html',\r\n  styleUrls: ['./httpTest.css']\r\n})\r\nexport class httpTest {\r\n  arg1=\"タイトル１\"; arg2=\"府中市\"; arg3=\"35.672074\"; arg4=\"139.480319\";\r\n\r\n  constructor(private _navigator: OnsNavigator , private _indexedDbService: IndexedDbService, private _httpService: HttpService) {}\r\n\r\n  goToMenu() {\r\n    this._navigator.nativeElement.pushPage(Menu, {data: {hoge: \"fuga\"}});\r\n  }\r\n\r\n  async goGetLocation() {\r\n    var location = await this._httpService.GetLocation(Number(this.arg1), Number(this.arg2), Number(this.arg3));\r\n    let m;\r\n    for (let key of Object.keys(location)) {\r\n      console.log(key, location[key]);\r\n    }\r\n    if(location.locations && location.locations.length > 0){\r\n      location.locations.map(v => {\r\n        m = [\r\n          `locationID:${v.locationID}`,\r\n          `title:${v.title}`,\r\n          `address:${v.address}`,\r\n          `latitude:${v.latitude}`,\r\n          `longitude:${v.longitude}`,\r\n          `distance:${v.distance}`\r\n        ];\r\n        ons.notification.alert({ messageHTML: this.forHtml(m), title:'GetLocation' });\r\n      }, this);\r\n    }else{\r\n      ons.notification.alert({ message: `StatusCd:${location.statusCd}<br>message:${location.messages}`, title:'GetLocation' });\r\n    }\r\n\r\n  }\r\n  \r\n  async goAddLocation() {\r\n    var location = await this._httpService.AddLocation(this.arg1, this.arg2, Number(this.arg3), Number(this.arg4));\r\n    for (let key of Object.keys(location)) {\r\n      console.log(key, location[key]);\r\n    }\r\n    ons.notification.alert({ messageHTML: `statusCd:${location.statusCd}<br>locationCd:${location.locationID}`, title:'AddLocation' });\r\n  }\r\n\r\n  async goGetPhoto() {\r\n    var photo = await this._httpService.GetPhoto(Number(this.arg1), Number(this.arg2));\r\n    let m;\r\n    for(let k of Object.keys(photo)){\r\n      console.log(k, photo[k]);\r\n    }\r\n    photo.photos.map(v => {\r\n      m = [\r\n        `year:${v.year}`,\r\n        `comment:${v.comment}`,\r\n        `bin:${v.bin}`\r\n      ];\r\n      ons.notification.alert({ messageHTML: this.forHtml(m), title:'GetPhoto' });\r\n    }, this);\r\n  }\r\n\r\n  async goAddPhoto() {\r\n    var photo = await this._httpService.AddPhoto(Number(this.arg1), Number(this.arg2), this.arg3, this.arg4);\r\n    ons.notification.alert({ messageHTML: `statusCd:${photo.statusCd}<br>photoId:${photo.photoID}`, title:'AddPhoto' });\r\n  }\r\n\r\n  forHtml(str: string[]) {\r\n    let s = \"\";\r\n    str.map(m => {\r\n      s += m+\"<br>\";\r\n    });\r\n    return s.slice(0, -4);\r\n  }\r\n}\r\n","module.exports = \"\\r\\n  .map_area {\\r\\n    height:90%;\\r\\n  }\\r\\n  agm-map {\\r\\n    height: 90%;\\r\\n  }\\r\\n  .btn_area {\\r\\n    height:10%;\\r\\n    width:100%;\\r\\n    display:inline-bock;\\r\\n  }\\r\\n  .btn_area img {\\r\\n    height: 100%;\\r\\n  }\\r\\n  .btn_icon_style {\\r\\n    height: 100%;\\r\\n    width:33.3333%;\\r\\n    background-color:transparent;\\r\\n  }\\r\\n  .btn_icon_style_left {\\r\\n    text-align: left;\\r\\n  }\\r\\n  .btn_icon_style_center {\\r\\n    text-align: center;\\r\\n  }\\r\\n  .btn_icon_style_right {\\r\\n    text-align: right;\\r\\n  }\\r\\n  .btn_regist_point {\\r\\n    background-color:red;\\r\\n  }\\r\\n  .w-100 {\\r\\n    width: 100%;\\r\\n  }\\r\\n  .w-90 {\\r\\n    width: 90%;\\r\\n  }\\r\\n  .w-80 {\\r\\n    width: 80%;\\r\\n  }\\r\\n  .w-50 {\\r\\n    width: 50%;\\r\\n  }\\r\\n  .w-40 {\\r\\n    width: 50%;\\r\\n  }\\r\\n  .w-30 {\\r\\n    width: 30%;\\r\\n  }\\r\\n  .w-20 {\\r\\n    width: 20%;\\r\\n  }\\r\\n\"","module.exports = \"<ons-toolbar>\\r\\n  <div class=\\\"left\\\"><ons-back-button>Back</ons-back-button></div>\\r\\n  <div class=\\\"center\\\">地図から探す</div>\\r\\n</ons-toolbar>\\r\\n<agm-map [latitude]=\\\"centerLat\\\" [longitude]=\\\"centerLng\\\" [zoom]=15 [disableDoubleClickZoom]=\\\"true\\\" (mapDblClick)=\\\"dblClickMap($event)\\\">\\r\\n  <agm-marker\\r\\n    [latitude]=\\\"lastClicklat\\\" \\r\\n    [longitude]=\\\"lastClicklng\\\"\\r\\n    [iconUrl]=\\\"{\\r\\n      url:markerPinSelected,\\r\\n      scaledSize: {\\r\\n      width: 40,\\r\\n      height: 40\\r\\n      }\\r\\n    }\\\"\\r\\n    [label]=\\\"{\\r\\n      text: '選択した地点',\\r\\n      fontSize: '10px',\\r\\n      fontWeight: '700'\\r\\n    }\\r\\n  \\\">\\r\\n    <agm-info-window #infoWindow>\\r\\n      <table>\\r\\n        <tr>\\r\\n          <td colspan=\\\"2\\\">この地点を登録する</td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n            <td class=\\\"w-30\\\">地点名</td>\\r\\n            <td class=\\\"w-70\\\"><ons-input id=\\\"mapTitle\\\" [(value)]=\\\"txtTitle\\\"></ons-input></td>     \\r\\n        </tr>\\r\\n        <tr>\\r\\n            <td>住所</td>\\r\\n            <td>\\r\\n              <ons-select [(ngModel)]=\\\"selectedAddresses\\\">\\r\\n                <option *ngFor=\\\"let address of addressList\\\">{{address?.formatted_address}}</option>\\r\\n              </ons-select>\\r\\n            </td>          \\r\\n        </tr>\\r\\n        <tr>\\r\\n          <td colspan=\\\"2\\\"><ons-button (click)=\\\"registMapMst(lastClicklat, lastClicklng, infoWindow)\\\" modifier=\\\"large\\\" class=\\\"btn_regist_point\\\">登録</ons-button></td>\\r\\n        </tr>\\r\\n      </table>\\r\\n    </agm-info-window>\\r\\n  </agm-marker>\\r\\n  <agm-marker *ngFor=\\\"let m of markers;\\\" \\r\\n    [latitude]=\\\"m.Latitude\\\" \\r\\n    [longitude]=\\\"m.Longitude\\\" \\r\\n    [label]=\\r\\n    \\\"{\\r\\n      text: m.Title,\\r\\n      fontSize: '10px',\\r\\n      fontWeight: '700'\\r\\n    }\\\"\\r\\n    [iconUrl]=\\\"{\\r\\n      url:m.iconUrl,\\r\\n      scaledSize: {\\r\\n      width: 40,\\r\\n      height: 40\\r\\n      }\\r\\n    }\\\"\\r\\n    (markerClick)=\\\"clickMarker(m)\\\"\\r\\n    >\\r\\n    <agm-info-window>\\r\\n      <table>\\r\\n        <tr>\\r\\n          <td class=\\\"w-30\\\">名称：</td>\\r\\n          <td class=\\\"w-70\\\">{{m.Title}}</td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n          <td>住所：</td>\\r\\n          <td>{{m.Address}}</td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n          <td colspan=\\\"2\\\"><ons-button (click)=\\\"sendToTweet(m.Title)\\\" modifier=\\\"large\\\" class=\\\"btn_regist_point\\\">ツイートする</ons-button></td>\\r\\n        </tr>\\r\\n      </table>\\r\\n    </agm-info-window>\\r\\n  </agm-marker>\\r\\n  <agm-marker\\r\\n      [latitude]=\\\"presentLat\\\" \\r\\n      [longitude]=\\\"presentLng\\\"\\r\\n      [iconUrl]=\\\"{\\r\\n        url:nowPlacePin,\\r\\n        scaledSize: {\\r\\n        width: 40,\\r\\n        height: 40\\r\\n        }\\r\\n      }\\\"\\r\\n      [label]=\\\"{\\r\\n        text: '現在地',\\r\\n        fontSize: '10px',\\r\\n        fontWeight: '700'\\r\\n      }\\r\\n      \\\">\\r\\n    </agm-marker>\\r\\n</agm-map>\\r\\n<div class=\\\"btn_area\\\">\\r\\n  <ons-button (click)=\\\"helpPopup()\\\" class=\\\"btn_icon_style btn_icon_style_center\\\"><img [src]=\\\"iconPathInfo\\\" alt=\\\"登録の仕方\\\"></ons-button>\\r\\n  <ons-button (click)=\\\"goToTimeTrip()\\\" class=\\\"btn_icon_style btn_icon_style_center\\\"><img [src]=\\\"iconPathTrip\\\" alt=\\\"TimeTrip画面へ\\\"></ons-button>\\r\\n  <ons-button (click)=\\\"goToUpload()\\\" class=\\\"btn_icon_style btn_icon_style_center\\\"><img [src]=\\\"iconPathRegist\\\" alt=\\\"画像アップロード画面へ\\\"></ons-button>\\r\\n</div>\\r\\n\"","import * as ons from 'onsenui';\r\nimport {Upload} from '../upload/upload';\r\nimport {TimeTrip} from '../timeTrip/timeTrip';\r\nimport {OnsNavigator,OnsenModule,Params} from 'ngx-onsenui' ;\r\nimport {Component, NgZone, Injectable, OnInit, EventEmitter} from '@angular/core';\r\nimport {MapsAPILoader,GoogleMapsAPIWrapper, MouseEvent, AgmMap, AgmMarker, AgmInfoWindow } from '@agm/core';\r\nimport {IndexedDbService} from '../../../services/IndexedDbService';//ﾃﾞｭｸｼ\r\nimport {HttpService, StatusCd} from '../../../services/HttpService';//HTTPｻｰﾋﾞｽ\r\nimport {GoogleMapsAPIWrapperEx} from '../../../services/GoogleMapsAPIWrapperEx';//ｸﾞｰｸﾞﾙ\r\n\r\n@Component({\r\n  selector: \"ons-page[title='map']\",\r\n  templateUrl: './map.html',\r\n  styleUrls: ['./map.css']\r\n})\r\n\r\nexport class Map implements OnInit {\r\n  // #region 共通変数\r\n  locationID: number;\r\n  address: string;\r\n  presentLat: number;\r\n  presentLng: number;\r\n  centerLat:number;\r\n  centerLng:number;\r\n  lastClicklat: number;\r\n  lastClicklng: number;\r\n  markers: marker[] = [];\r\n  zone: NgZone;\r\n  apiLoader: MapsAPILoader;\r\n  apiWrapper:GoogleMapsAPIWrapper;\r\n  map;\r\n  lastOpenWindow;\r\n  createWindow = null;\r\n  txtTitle: string = '';\r\n  selectedAddresses: string = '';// 住所を選択した値が入る\r\n  selectedMarkerPin: string;\r\n  markerPinNormal: string = './assets/contents/icons/pin_normal.svg';\r\n  markerPinSelected: string = './assets/contents/icons/pin_free.svg';\r\n  nowPlacePin: string = './assets/contents/icons/pin_nowPlace.svg';\r\n  iconPathTrip: string = './assets/contents/buttons/goToTrip.png';\r\n  iconPathRegist: string = './assets/contents/buttons/goToRegist.png';\r\n  iconPathInfo: string = './assets/contents/buttons/showInfo.png';\r\n  addressList:any[];\r\n  // #endregion\r\n\r\n  constructor(private _navigator: OnsNavigator, \r\n    private _httpService: HttpService, \r\n    private _indexedDbService: IndexedDbService,\r\n    private _googleMapsAPIWrapperEx: GoogleMapsAPIWrapperEx, \r\n    private _params: Params) {}\r\n\r\n  async ngOnInit() {\r\n    this.presentLat = this._params.data.PresentLat;\r\n    this.presentLng = this._params.data.PresentLng;\r\n    var comp = this;\r\n\r\n    if(this.presentLat != null || this.presentLng != null){\r\n      this.changeCenter(comp.presentLat,comp.presentLng);\r\n      this.getMapData(comp.centerLat,comp.centerLng);\r\n      this.displayPin();\r\n    }else{\r\n      ons.notification.alert({ message: '地点情報を取得できるように設定してからご使用くださいね！', title:'現在地が取得できませんでした', callback:function(){\r\n        // comp.presentLat = 35.690694;\r\n        // comp.presentLng = 139.691971;\r\n        comp.changeCenter(comp.presentLat,comp.presentLng);\r\n        comp.getMapData(comp.centerLat,comp.centerLng);\r\n        comp.displayPin();\r\n      }});\r\n    }\r\n  }\r\n\r\n  // #region 現在地を取得する\r\n  async getGeo() {\r\n    var option = { timeout: 6000 }; //タイムアウト値(ミリ秒)\r\n    var comp = this;\r\n    navigator.geolocation.getCurrentPosition(\r\n      function(position){\r\n        comp.presentLat = position.coords.latitude;\r\n        comp.presentLng = position.coords.longitude;\r\n        // comp.presentLat =  42.319744;// 室蘭NISCO仕様\r\n        // comp.presentLng = 140.986007;// 室蘭NISCO仕様\r\n        //comp.presentLat =  39.640479;// 宮古駅仕様\r\n        //comp.presentLng = 141.946646;// 宮古駅仕様\r\n\r\n        comp.changeCenter(comp.presentLat,comp.presentLng);\r\n        comp.getMapData(comp.centerLat,comp.centerLng);\r\n        comp.displayPin();\r\n      },\r\n      function(){\r\n        ons.notification.alert({ message: '地点情報を取得できるように設定してからご使用くださいね！', title:'現在地が取得できませんでした', callback:function(){\r\n          // comp.presentLat =  42.319744;// 室蘭NISCO仕様\r\n          // comp.presentLng = 140.986007;// 室蘭NISCO仕様\r\n          //comp.presentLat =  39.640479;// 宮古駅仕様\r\n          //comp.presentLng = 141.946646;// 宮古駅仕様\r\n          // comp.presentLat = 35.690694;\r\n          // comp.presentLng = 139.691971;\r\n          comp.changeCenter(comp.presentLat,comp.presentLng);\r\n          comp.getMapData(comp.centerLat,comp.centerLng);\r\n          comp.displayPin();\r\n        }});\r\n      },\r\n      option\r\n    );\r\n    \r\n  }\r\n  // #endregion\r\n\r\n  // #region ◆表示系◆\r\n  // #region 画面にピンを表示する\r\n  displayPin(){\r\n    this.apiWrapper = new GoogleMapsAPIWrapper(this.apiLoader,this.zone);\r\n    this.apiWrapper.getCenter()\r\n      .then(function(value){\r\n        console.log(value);\r\n      })\r\n      .catch(function(value){\r\n        console.log(value);\r\n      });\r\n  }\r\n  // #endregion\r\n  // #region ダブルタップした地点の情報を登録するための情報を取得する\r\n  async dblClickMap($event: MouseEvent){\r\n    this.lastOpenWindow = this;\r\n    this.resetInput();\r\n    this.lastClicklat = $event.coords.lat;\r\n    this.lastClicklng = $event.coords.lng;\r\n    this.addressList = await this._googleMapsAPIWrapperEx.getAddress(this.lastClicklat, this.lastClicklng);//座標から住所を取得する\r\n    this.address = this.addressList[0].formatted_address;\r\n  }\r\n  // #endregion\r\n  // #region タップした地点の情報を取得する\r\n  clickMarker(m: marker){\r\n    this.lastOpenWindow = this;\r\n    this.locationID = m.LocationID;\r\n    this.address = m.Address;\r\n    this.resetPinMarker();//ピンマーカーをすべて初期化する\r\n    m.iconUrl = this.markerPinSelected;\r\n    this.selectedMarkerPin = m.iconUrl;// 新しいアイコン情報を取得する\r\n    this.changeCenter(m.Latitude,m.Longitude);\r\n  }\r\n  // #endregion\r\n  // #region 指定した座標を中心にする\r\n  changeCenter(lat:number, lng:number){\r\n    this.centerLat = lat;\r\n    this.centerLng = lng;\r\n  }\r\n  // #endregion\r\n  // #endregion\r\n\r\n  // #region ◆DBアクセス系◆\r\n  // #region データ取得\r\n  async getMapData(lat:number, lng:number){\r\n    //var data = await this._indexedDbService.getMstLocationByRange(lat,lng);\r\n    var res = await this._httpService.GetLocation(lat, lng, null);\r\n    if(res.statusCd == StatusCd.success){\r\n      console.log('データ取得完了');\r\n      console.log('データの長さ：' + res.locations.length);\r\n      for(let data of res.locations){\r\n        this.markers.push({ \r\n            LocationID:data.locationID,\r\n            Title:data.title,\r\n            Address:data.address,\r\n            Latitude:data.latitude,\r\n            Longitude:data.longitude,\r\n            iconUrl:this.markerPinNormal\r\n          }\r\n        );\r\n\r\n        await this._httpService.GetPhoto(data.locationID, null);\r\n      };\r\n    }else{\r\n      console.log('データが取得できなかった');\r\n      this.markers = [];\r\n    }\r\n  }\r\n  // #endregion\r\n  // #region 地点登録\r\n  async registMapMst(lat:number, lng:number, infoWindow){\r\n    var address;\r\n    address = this._googleMapsAPIWrapperEx.getAddress(lat, lng);\r\n    if(this.txtTitle == ''){\r\n      this.alertNonInputTxt();\r\n    }else{\r\n      var ret = await this._httpService.AddLocation(this.txtTitle, this.selectedAddresses, lat, lng);\r\n      if(ret.statusCd != StatusCd.success){\r\n        ons.notification.alert(ret.messages.join('\\r\\n'));\r\n      }else{\r\n        this.changeCenter(lat,lng);\r\n        await this.getMapData(lat,lng);\r\n        this.displayPin();\r\n        infoWindow.close();\r\n      }\r\n    }\r\n  }\r\n  // #endregion\r\n  // #endregion\r\n \r\n  // #region ◆地点登録DBオブジェクト生成◆\r\n  createObj(locationID: number, lat:number, lng:number, tit:string, address:string){\r\n    return { LocationID: locationID,Title: tit, Address:address, Latitude:lat, Longitude:lng };\r\n  }\r\n  // #endregion\r\n\r\n  // #region ◆画面遷移系◆\r\n  // #region TimeTrip画面へ遷移\r\n  goToTimeTrip() {\r\n    if(this.locationID == undefined)\r\n    {\r\n      this.alertNonSelectPin();\r\n    }else{\r\n      this._navigator.nativeElement.pushPage(TimeTrip, { data: { LocationID: this.locationID } });\r\n    }\r\n  }\r\n  // #endregion\r\n  // #region アップロード画面へ遷移\r\n  goToUpload() {\r\n    if(this.locationID == undefined)\r\n    {\r\n      this.alertNonSelectPin();\r\n    }else{\r\n      this._navigator.nativeElement.pushPage(Upload, { data: { LocationID: this.locationID, Address: this.address } });\r\n    }\r\n  }\r\n  // #endregion\r\n  // #endregion\r\n\r\n  // #region ◆アラート系◆\r\n  // #region ピン未選択\r\n  alertNonSelectPin() {\r\n    ons.notification.alert({ message: '閲覧したいピンを選択すると、その地点の情報を確認できます', title:'ピンを選びましょう！' });\r\n  }\r\n  // #endregion\r\n  // #region 地点名未入力\r\n  alertNonInputTxt() {\r\n    ons.notification.alert({ message: 'この地点がどこなのか分かる地点名を入力しましょう', title:'地点の名前を入力しましょう！' });\r\n  }\r\n  // #endregion\r\n  // #region 使い方\r\n  helpPopup() {\r\n    ons.notification.alert({ message: '地図上をダブルタップして<br/>地点を登録できます', title:'地点登録の仕方' });\r\n  }\r\n  // #endregion\r\n  // #endregion\r\n\r\n  // #region ◆初期化系◆\r\n  // #region 入力項目リセット\r\n  resetInput(){\r\n    this.txtTitle = '';\r\n    this.selectedAddresses = '';\r\n    this.addressList = [];\r\n  }\r\n  // #endregion\r\n  // #region ピンマーカーアイコンリセット\r\n  resetPinMarker(){\r\n    var pin = this;\r\n    pin.markers.filter(function(value){\r\n      if(value.iconUrl === pin.markerPinSelected){\r\n        value.iconUrl = pin.markerPinNormal;\r\n      }\r\n    });    \r\n  }\r\n  // #endregion\r\n  // #endregion\r\n\r\n  // Twitterに投稿する\r\n  sendToTweet(Title: string){\r\n    console.log(\"Twitterに投稿するボタンを押下\");\r\n    var base_url = 'https://twitter.com/intent/tweet'; \r\n    var text = Title + 'についてツイートしています ';//ツイート本文\r\n    var hashtags = 'TimeTripPhotoGallery'\r\n    var tweetLink = base_url + '?text=' + encodeURIComponent(text) + '&hashtags=' + hashtags + '&target=_blank';\r\n    window.open(encodeURI(decodeURI(tweetLink)), 'この地点についてツイートする');\r\n  }\r\n}\r\n\r\n// #region ◆インタフェース◆\r\n// #region マーカー用インタフェース\r\ninterface marker{\r\n  LocationID:number;\r\n  Title:string;\r\n  Address:string;\r\n  Latitude:number;\r\n  Longitude:number;\r\n  iconUrl: string;\r\n}\r\n// #endregion\r\n// #endregion","module.exports = \".content{\\r\\n  background-color:#f9d3d3;\\r\\n}\\r\\n.menu_title{\\r\\n  text-align:center;\\r\\n  font-family:Impact;\\r\\n  font-size:50px;\\r\\n  color:brown;\\r\\n  margin:40px 0 10px 0;\\r\\n}\\r\\n.content ons-button{\\r\\n  width:220px;\\r\\n  height:90px;\\r\\n  line-height: 20px;\\r\\n  margin:13px;\\r\\n  padding-top:10px;\\r\\n  font-size:25px;\\r\\n  padding-top:30px;\\r\\n}\\r\\n.material-icons{\\r\\n  font-size:45px;\\r\\n  line-height:0.8px;\\r\\n}\\r\\n.menu_btn_Time_Trip{\\r\\n  background-color:#ffb553;\\r\\n}\\r\\n.menu_btn_Registrations{\\r\\n  background-color:#4bb5e0;\\r\\n}\\r\\n.menu_btn_map{\\r\\n  background-color:#ff716e;\\r\\n}\\r\\n.menu_btn_Upload{\\r\\n  background-color:#34314b;\\r\\n}\"","module.exports = \"\\r\\n<ons-toolbar>\\r\\n  <div class=\\\"center\\\" (click)=\\\"deleteDataBase()\\\">Menu</div>\\r\\n</ons-toolbar>\\r\\n<div class=\\\"content\\\">\\r\\n  <div class=\\\"menu_title\\\"><!-- (click)=\\\"goToHttpTest()\\\">-->\\r\\n    Time Trip\\r\\n    <br>\\r\\n    Photo Gallery\\r\\n  </div>\\r\\n  <div *ngIf=\\\"false\\\" id=\\\"message\\\">{{msg}}</div>\\r\\n  <div style=\\\"text-align: center; margin: 10px\\\">\\r\\n    <ons-button *ngIf=\\\"false\\\" (click)=\\\"goToTimeTrip()\\\" class=\\\"menu_btn_Time_Trip\\\">\\r\\n      <i class=\\\"material-icons\\\">restore</i><br>Time Trip\\r\\n    </ons-button>\\r\\n    <br>\\r\\n    <ons-button (click)=\\\"goToRegistrationList()\\\" class=\\\"menu_btn_Registrations\\\">\\r\\n      <i class=\\\"material-icons\\\">view_list</i><br>Registrations\\r\\n    </ons-button>\\r\\n    <br>\\r\\n    <ons-button (click)=\\\"goToMap()\\\" class=\\\"menu_btn_map\\\">\\r\\n        <i class=\\\"material-icons\\\">place</i><br>Map\\r\\n    </ons-button>\\r\\n    <br>\\r\\n    <ons-button (click)=\\\"goToUpload()\\\" class=\\\"menu_btn_Upload\\\" *ngIf=\\\"false\\\">\\r\\n      <i class=\\\"material-icons\\\">arrow_upward</i><br>Upload\\r\\n    </ons-button>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import {Component, HostListener} from '@angular/core';\r\nimport * as ons from 'onsenui';\r\nimport {OnsNavigator,OnsenModule} from 'ngx-onsenui' \r\n\r\nimport {Map} from '../map/map';\r\nimport {RegistrationList} from '../registrationList/registrationList';\r\nimport {Upload} from '../upload/upload';\r\nimport { TimeTrip } from '../timeTrip/timeTrip';\r\nimport { httpTest } from '../httpTest/httpTest';\r\n\r\nimport {IndexedDbService} from '../../../services/IndexedDbService';//ﾃﾞｭｸｼ\r\n\r\n@Component({\r\n  selector: \"ons-page[title='menu']\",\r\n  templateUrl: './menu.html',\r\n  styleUrls: ['./menu.css']\r\n})\r\nexport class Menu {\r\n\r\n  presentLat: number;\r\n  presentLng: number;\r\n  afterGetGeo: boolean = false;\r\n\r\n  constructor(private _navigator: OnsNavigator , private _indexedDbService: IndexedDbService) {}\r\n\r\n  @HostListener('show')\r\n  async show(e) {\r\n    await this.getGeo();\r\n    this.afterGetGeo = true;\r\n  }\r\n\r\n  deleteDataBase() {\r\n    ons.notification.confirm({\r\n      title: \"確認\",\r\n      message: \"キャッシュを削除しますか？\",\r\n      cancelable: true,\r\n      callback: i => {\r\n        if (i == 1) {\r\n          //this._indexedDbService.deleteDatabase();\r\n          this._indexedDbService.deleteAllMstLocationInfo();\r\n          this._indexedDbService.deleteAllTrnPhotoInfo();\r\n        }\r\n      }\r\n    });\r\n    \r\n  }\r\n\r\n  ngOnInit(){\r\n    \r\n  }\r\n\r\n  async goToTimeTrip() {\r\n    // GetGeo未完了時は処理を中断させる\r\n    if (this.afterGetGeo == false){ return; }\r\n\r\n    var min = 1 ;\r\n    var max = await this._indexedDbService.countLocationInfo();\r\n    \r\n    var r = Math.floor( Math.random() * (max + 1 - min) ) + min ;\r\n\r\n    this._navigator.nativeElement.pushPage(TimeTrip, {data: { \"LocationID\" : r}});\r\n  }\r\n  \r\n  goToHttpTest(){\r\n    // GetGeo未完了時は処理を中断させる\r\n    if (this.afterGetGeo == false){ return; }\r\n\r\n    this._navigator.nativeElement.pushPage(httpTest, {data: {hoge: \"fuga\"}});\r\n  }\r\n\r\n  goToMap() {\r\n    // GetGeo未完了時は処理を中断させる\r\n    if (this.afterGetGeo == false){ return; }\r\n\r\n    this._navigator.nativeElement.pushPage(Map, {data: { \"PresentLat\": this.presentLat, \"PresentLng\": this.presentLng }});\r\n  }\r\n\r\n  goToRegistrationList() {\r\n    // GetGeo未完了時は処理を中断させる\r\n    if (this.afterGetGeo == false){ return; }\r\n\r\n    this._navigator.nativeElement.pushPage(RegistrationList, {data: { \"PresentLat\": this.presentLat, \"PresentLng\": this.presentLng }});\r\n  }\r\n\r\n  goToUpload() {\r\n    // GetGeo未完了時は処理を中断させる\r\n    if (this.afterGetGeo == false){ return; }\r\n\r\n    this._navigator.nativeElement.pushPage(Upload, {data: {hoge: \"fuga\"}});\r\n  }\r\n\r\n  // 現在地を取得する\r\n  async getGeo() {\r\n    var option = { timeout: 6000 }; //タイムアウト値(ミリ秒)\r\n    var comp = this;\r\n    navigator.geolocation.getCurrentPosition(\r\n      function(position){\r\n        comp.presentLat = position.coords.latitude;\r\n        comp.presentLng = position.coords.longitude;\r\n        console.log(\"Get Geo OK.\");\r\n      },\r\n      function(){\r\n        console.error(\"Get Geo NG.\");\r\n        // ons.notification.alert({ message: '地点情報を取得できるように設定してからご使用くださいね！', title:'現在地が取得できませんでした', callback:function(){\r\n        // }});\r\n      },\r\n      option\r\n    );\r\n  }\r\n}\r\n","module.exports = \"\\r\\n.registration_title{\\r\\n    font-size:20px;\\r\\n    font-weight:bold;\\r\\n  }\\r\\n.registration_comment{\\r\\n  font-size:14px; \\r\\n}\\r\\n.dataPicArea {\\r\\n  width: 100%;\\r\\n}\\r\\n.dataPicArea img {\\r\\n  text-align:center;\\r\\n}\\r\\n.dataMemoArea {\\r\\n  width:30%;\\r\\n}\\r\\n.dataMemoArea-title {\\r\\n  margin-left:5px;\\r\\n  margin-right:20px;\\r\\n  /*font-size:16px;*/\\r\\n  font-weight:700;\\r\\n}\\r\\n.dataMemoArea-text {\\r\\n  margin-left:5px;\\r\\n  margin-right:20px;\\r\\n  /*font-size:10px;*/\\r\\n}\"","module.exports = \"<ons-toolbar>\\r\\n　<div class=\\\"left\\\"><ons-back-button>Back</ons-back-button></div>\\r\\n  <div class=\\\"center\\\">写真一覧から探す</div>\\r\\n</ons-toolbar>\\r\\n<div class=\\\"content\\\">\\r\\n  <div *ngIf=\\\"isVisible\\\">\\r\\n      <ons-list>\\r\\n          <ons-list-item modifier=\\\"chevron\\\" tappable *ngFor=\\\"let Registration of RegistrationLists\\\" [value]=\\\"Registration.Title\\\" (click)=\\\"clickPhoto(Registration.LocationID,Registration.PhotoID)\\\">\\r\\n            <div>\\r\\n                <img [src]=\\\"sanitize(Registration.Bin)\\\" [alt]=\\\"Registration.Title\\\" class=\\\"dataPicArea\\\">\\r\\n            </div>\\r\\n            <br>\\r\\n            <div>\\r\\n              <p class=\\\"dataMemoArea-text\\\">{{ Registration.Comment }}</p>\\r\\n            </div>\\r\\n          </ons-list-item>\\r\\n        </ons-list>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\"","import {Component} from '@angular/core';\r\nimport {DomSanitizer} from '@angular/platform-browser';\r\nimport * as ons from 'onsenui';\r\nimport {OnsNavigator,OnsenModule,Params} from 'ngx-onsenui' \r\n\r\nimport {TimeTrip} from '../timeTrip/timeTrip';\r\n\r\nimport {IndexedDbService} from '../../../services/IndexedDbService';\r\nimport {HttpService, StatusCd, PhotoModel} from '../../../services/HttpService';\r\n\r\n@Component({\r\n  selector: \"ons-page[title='registrationList']\",\r\n  templateUrl: './registrationList.html',\r\n  styleUrls: ['./registrationList.css']\r\n})\r\nexport class RegistrationList {\r\n  RegistrationLists: RegistrationInfo[] = [];\r\n  isVisible = false;\r\n\r\n  constructor(private _navigator: OnsNavigator, \r\n    private _indexedDbService: IndexedDbService, \r\n    private _httpService: HttpService, \r\n    private _params: Params,\r\n    private _domSanitizer: DomSanitizer) {}\r\n\r\n  async ngOnInit() {\r\n    this.getRegistList();\r\n  }\r\n  \r\n  async getRegistList(){\r\n    // paramsから緯度経度を取得\r\n    var presentLat = this._params.data.PresentLat;\r\n    var presentLng = this._params.data.PresentLng;\r\n    if (!presentLat || !presentLng) {\r\n      ons.notification.alert({ message: '地点情報を取得できるように設定してからご使用くださいね！', title:'現在地が取得できませんでした'});\r\n      return;\r\n    }\r\n\r\n    // DBから位置情報一覧を取得\r\n    var location = await this._httpService.GetLocation(presentLat, presentLng, 15);\r\n    if (location.statusCd != StatusCd.success){\r\n      //ons.notification.alert({ messageHTML: `ステータスコード：${location.statusCd}<br>location.messages.join()`, title:'エラー'});\r\n      return;\r\n    }\r\n\r\n    this.isVisible = false;\r\n    for(let l of location.locations){\r\n      // DBから写真一覧を取得\r\n      let photo = await this._httpService.GetPhoto(l.locationID, null);\r\n      if(photo.statusCd != StatusCd.success){\r\n        continue;\r\n      }\r\n\r\n      for(let p of photo.photos){\r\n        // 表示用リストに追加\r\n        this.RegistrationLists.push({\r\n          PhotoID: p.photoID,\r\n          Year: p.year,\r\n          LocationID: l.locationID,\r\n          Title: l.title,\r\n          Comment: p.comment,\r\n          Bin: decodeURIComponent(p.bin)//p.bin.replace(/\\s+/g, \"\")\r\n        });\r\n      }\r\n    }\r\n    this.isVisible = true;\r\n  }\r\n  \r\n  // 写真をタップした時のイベント\r\n  clickPhoto(_locatonID:number, _photoId:number){\r\n    this._navigator.nativeElement.pushPage(TimeTrip, {data: {PhotoID: _photoId , LocationID:_locatonID}});\r\n    console.log('クリックしたLocationID' + _locatonID);\r\n    console.log('クリックしたPhotoId' + _photoId);\r\n  }\r\n\r\n  sanitize(url:string){\r\n    return this._domSanitizer.bypassSecurityTrustUrl(url);\r\n  }\r\n\r\n}\r\n\r\nclass RegistrationInfo {\r\n  PhotoID: number;\r\n  Year: number;\r\n  LocationID: number;\r\n  Title: string;\r\n  Comment: string;\r\n  Bin: string;\r\n  //LastUpdateDate: string;\r\n}\r\n","module.exports = \"\\r\\n  .left {\\r\\n    float: left;\\r\\n    margin-right: 3px;\\r\\n  }\\r\\n   \\r\\n  .item {\\r\\n    margin-bottom: 30px;\\r\\n  }\\r\\n   \\r\\n  .title {\\r\\n    font-size: 24px;\\r\\n    \\r\\n  }\\r\\n   \\r\\n  .material-icons {\\r\\n    font-size:30px;\\r\\n  }\\r\\n   \\r\\n  .btn {\\r\\n    color: black;\\r\\n    background-color: transparent;\\r\\n    box-shadow: none;\\r\\n    height: 35px;\\r\\n    width: 35px;\\r\\n    padding: 0px;\\r\\n    margin-right: 10px;\\r\\n  }\\r\\n   \\r\\n  .addressSelect{\\r\\n    width: calc(100% - 35px - 10px);\\r\\n  }\\r\\n   \\r\\n  .carousel_text {\\r\\n    position: absolute; \\r\\n    bottom: 0; \\r\\n    right: 30px; \\r\\n    margin-bottom: 10px;\\r\\n    font-size: 30px;\\r\\n    color: darkgray;\\r\\n  }\\r\\n   \\r\\n  .carousel_photo {\\r\\n    margin: auto;\\r\\n    position: absolute;\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    right: 0;\\r\\n    bottom: 0;\\r\\n    max-height: 100%;\\r\\n    max-width: 100%;\\r\\n  }\\r\\n   \\r\\n  .carousel_erricon {\\r\\n    margin: auto;\\r\\n    position: absolute;\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    right: 0;\\r\\n    bottom: 0;\\r\\n    width: 35px;\\r\\n    height: 35px;\\r\\n  }\\r\\n   \\r\\n  .photoModal {\\r\\n    height: 300px;\\r\\n    width: 300px;\\r\\n    margin: auto;\\r\\n  }\\r\\n   \\r\\n  .modal_text {\\r\\n    position: relative;\\r\\n    top: 250px;\\r\\n    left: 90px;\\r\\n    font-size: 30px;\\r\\n    color: dimgray;\\r\\n  }\\r\\n   \\r\\n  @media screen and (min-width:0px){\\r\\n    #carousel {\\r\\n      height: 200px; \\r\\n      width: 80%;\\r\\n      margin: 0 auto;\\r\\n    }\\r\\n  }\\r\\n   \\r\\n  @media screen and (min-width:600px){\\r\\n    #carousel {\\r\\n      height: 400px; \\r\\n      width: 80%; \\r\\n      margin: 0 auto;\\r\\n    }\\r\\n  } \\r\\n\"","module.exports = \"<ons-toolbar>\\r\\n  <div class=\\\"left\\\"><ons-back-button>Back</ons-back-button></div>\\r\\n  <div class=\\\"center\\\">TimeTrip</div>\\r\\n</ons-toolbar>\\r\\n<div class=\\\"content\\\">\\r\\n  <ons-list>\\r\\n    <!-- 上段エリア -->\\r\\n    <ons-list-item style=\\\"width: 100%;\\\">\\r\\n      <ons-button class=\\\"btn\\\" (click)=\\\"goToMenu()\\\">\\r\\n        <i class=\\\"material-icons\\\">home</i>\\r\\n      </ons-button>\\r\\n      {{location.Address}}\\r\\n      <!-- <ons-select class=\\\"addressSelect\\\" [(ngModel)]=\\\"locationId\\\" (change)=\\\"changeAddress($event)\\\">\\r\\n        <option *ngFor=\\\"let addressItem of addressListDB\\\" [value]=\\\"addressItem.LocationID\\\">\\r\\n          {{ addressItem.Address }}\\r\\n        </option>\\r\\n      </ons-select> -->\\r\\n    </ons-list-item>\\r\\n\\r\\n    <!-- 写真エリア -->\\r\\n    <ons-list-item style=\\\"width: 100%;\\\">\\r\\n      <div (click)=\\\"prev()\\\" style=\\\"z-index: 100;\\\" style=\\\"width: 30px;\\\">\\r\\n        <i [style.display]=\\\"!isPrev() ? 'none' : 'block'\\\" class=\\\"material-icons\\\">arrow_back</i>\\r\\n      </div>\\r\\n      <ons-carousel #carousel swipeable auto-scroll centered id=\\\"carousel\\\"\\r\\n        (postchange)=\\\"toPostChange($event)\\\">\\r\\n        <ons-carousel-item *ngFor=\\\"let item of photoInfoList;let i = index\\\" (click)=\\\"openModal(i)\\\">\\r\\n          <img class=\\\"carousel_photo\\\" [src]=\\\"item.Bin\\\" alt=\\\"\\\" (error)=\\\"isImgErrList[i] = true\\\" style=\\\"height: 100%;\\\">\\r\\n          <div *ngIf=\\\"isImgErrList[i]\\\" class=\\\"carousel_erricon\\\"><i class=\\\"material-icons\\\">cancel</i></div>\\r\\n        </ons-carousel-item>\\r\\n      </ons-carousel>\\r\\n      <div (click)=\\\"next()\\\" style=\\\"z-index: 100;\\\" style=\\\"width: 30px;\\\">\\r\\n        <i [style.display]=\\\"!isNext() ? 'none' : 'block'\\\" class=\\\"material-icons\\\">arrow_forward</i>\\r\\n      </div>\\r\\n    </ons-list-item>\\r\\n    \\r\\n    <!-- 情報エリア -->\\r\\n    <ons-list-item>\\r\\n      <div align=\\\"center\\\" style=\\\"width: 100%;\\\">\\r\\n        <div *ngIf=\\\"photoInfo && photoInfo.Year\\\" class=\\\"item title\\\">{{photoInfo.Year}} 年</div>\\r\\n        <div *ngIf=\\\"false\\\" class=\\\"item title\\\">{{location.Title}}</div><!--廃止-->\\r\\n        <div class=\\\"item\\\" style=\\\"margin-top: 50px;\\\">{{photoInfo?.Comment}}</div>\\r\\n        <div class=\\\"item\\\">\\r\\n          <ons-button (click)=\\\"goToUpload()\\\" class=\\\"btn\\\"><i class=\\\"material-icons\\\">edit</i></ons-button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </ons-list-item>\\r\\n  </ons-list>\\r\\n</div>\\r\\n\\r\\n<!-- 画像拡大モーダル -->\\r\\n<ons-modal #modal (click)=\\\"modal.hide()\\\" *ngIf=\\\"photoInfo?.Bin\\\">\\r\\n  <div class=\\\"photoModal\\\">\\r\\n    <img class=\\\"carousel_photo\\\" [src]=\\\"photoInfo.Bin\\\">\\r\\n  </div>\\r\\n</ons-modal>\"","import { Component, ViewChild, ElementRef, HostListener, AfterViewChecked } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { Menu } from '../menu/menu';\r\nimport { Upload } from '../upload/upload';\r\n\r\nimport * as ons from 'onsenui';\r\nimport {\r\n  OnsSelect,\r\n  OnsenModule,\r\n  CUSTOM_ELEMENTS_SCHEMA,\r\n  OnsNavigator,\r\n  Params\r\n} from 'ngx-onsenui';\r\n\r\nimport { IndexedDbService } from '../../../services/IndexedDbService';\r\nimport { LocalLocationInfo, LocalPhotoInfo } from '../../../services/HttpService';\r\n\r\n@Component({\r\n  selector: \"ons-page[title='timeTrip']\",\r\n  templateUrl: './timeTrip.html',\r\n  // styleUrls: ['../src/modules/children/timeTrip/timeTrip.css'],\r\n  styleUrls: ['./timeTrip.css']\r\n})\r\nexport class TimeTrip {\r\n  @ViewChild('carousel') carousel: ElementRef;\r\n  @ViewChild('modal') modal: ElementRef;\r\n \r\n  photoInfo: LocalPhotoInfo = new LocalPhotoInfo();\r\n\r\n  isImgErrList: boolean[] = [];\r\n  locationInfoList: LocalLocationInfo[] = [];\r\n  photoInfoAllList: LocalPhotoInfo[] = [];\r\n  photoInfoList: LocalPhotoInfo[] = [];\r\n  location: LocalLocationInfo = new LocalLocationInfo();\r\n  baseDistance: number = 0;\r\n  activeIndex: number = 0;\r\n\r\n  photoId: number = 0;\r\n  check: boolean = true;\r\n\r\n  isConstructor: boolean = false;\r\n\r\n  isVisible = false;\r\n  params = null;\r\n\r\n  constructor(private _navigator: OnsNavigator, \r\n    private _indexedDbService: IndexedDbService, \r\n    private _params: Params) {\r\n      \r\n    this.isConstructor = true;\r\n  }\r\n\r\n  @HostListener('show')\r\n  timeTripShow(e) {\r\n    if(this.isConstructor){\r\n      this.params = this._params.data;\r\n    }else{\r\n      this.params = this._navigator.nativeElement.topPage.data;\r\n    }\r\n    this.init();\r\n  }\r\n\r\n  ngAfterViewChecked(){\r\n    if(this.check && this.photoInfoList && this.photoInfoList.length > 0){\r\n      var index = this.photoInfoList.findIndex(s => s.PhotoID == this.photoId);\r\n      var activeIndex = index == -1 ? 0 : index;\r\n      this.carousel.nativeElement.setActiveIndex(activeIndex, { animation: \"none\" });\r\n\r\n      this.check = false;\r\n    }\r\n  }\r\n\r\n  async init() {\r\n    this.isVisible = false;\r\n\r\n    // 引数を取得\r\n    // console.log(this.params);\r\n    var locationId = this.params.LocationID;\r\n    this.photoId = this.params.PhotoID;\r\n    \r\n    this.photoInfoList = [];\r\n    this.check = true;\r\n\r\n    // 位置情報リスト取得\r\n    //console.log(await this._indexedDbService.getMstLocationInfo());\r\n    this.locationInfoList = await this._indexedDbService.getMstLocationInfo();\r\n    if(this.locationInfoList){\r\n      this.location = this.locationInfoList.find(f => f.LocationID == locationId);\r\n      this.isVisible = !this.location ? false : true;\r\n    }\r\n\r\n    // 写真情報取得\r\n    await this.setPhotoInfo(locationId, this.photoId);\r\n\r\n    // 読み込めなかった写真リスト初期化\r\n    var array = new Array(this.photoInfoList.length);\r\n    this.isImgErrList = this.isImgErrList.fill(false, 0, array.length);\r\n\r\n    if(this.photoInfoList.length == 0){\r\n      ons.notification.toast('写真がありません！', { timeout: 1500, animation: 'fall' });\r\n    }\r\n\r\n    // var comp = this;\r\n    // this.modal.nativeElement.on(\"pinchin\", (event) => {\r\n    //   console.log(\"pinchin\");\r\n    //   console.log(event);\r\n\r\n    //   comp.modal.nativeElement.style.zoom = comp.getDistance(event);\r\n    // });\r\n\r\n    // this.modal.nativeElement.on(\"pinchout\", (event) => {\r\n    //   console.log(\"pinchout\");\r\n    //   console.log(event);\r\n\r\n    //   comp.modal.nativeElement.style.zoom = comp.getDistance(event);\r\n    // });\r\n\r\n    // console.log(this.locationInfoList);\r\n    // console.log(this.location);\r\n    // console.log(this.photoInfoAllList);\r\n    // console.log(this.photoInfoList);\r\n    // console.log(this.photoInfo);\r\n  }\r\n\r\n  // カルーセル切り替え時\r\n  toPostChange(event) {\r\n    this.activeIndex = event.activeIndex;\r\n    this.photoInfo = this.photoInfoList[event.activeIndex];\r\n  }\r\n\r\n  isPrev(): boolean{\r\n    return this.activeIndex != 0;\r\n  }\r\n\r\n  isNext(): boolean{\r\n    return this.photoInfoList.length != 0 && this.activeIndex != this.photoInfoList.length - 1;\r\n  }\r\n\r\n  prev(){\r\n    this.carousel.nativeElement.prev();\r\n  }\r\n\r\n  next(){\r\n    this.carousel.nativeElement.next();\r\n  }\r\n  \r\n  // メニューに遷移\r\n  goToMenu() {\r\n    this._navigator.nativeElement.resetToPage(Menu);\r\n  }\r\n\r\n  // uploadに遷移\r\n  goToUpload() {\r\n    this.isConstructor = false;\r\n    this._navigator.nativeElement.pushPage(Upload, {data: { LocationID: this.location.LocationID, Address: this.location.Address }});\r\n  }\r\n\r\n  // 画像拡大モーダルを開く\r\n  openModal(index: number) {\r\n    if (!this.isImgErrList[index]) {\r\n      this.modal.nativeElement.show();\r\n    }\r\n  }\r\n\r\n  // カルーセルの初期設定\r\n  private initCrousel(comp: TimeTrip, photoID: number){\r\n    // カルーセルの初期位置設定\r\n    var index = comp.photoInfoList.findIndex(s => s.PhotoID == photoID);\r\n    console.log(index);\r\n    var activeIndex = index == -1 ? 0 : index;\r\n    comp.carousel.nativeElement.refresh();\r\n    comp.carousel.nativeElement.setActiveIndex(activeIndex);\r\n    //this.carousel.nativeElement.setAttribute(\"initial-index\", activeIndex.toString());\r\n  }\r\n\r\n  setindex(n: number){\r\n    this.carousel.nativeElement.setActiveIndex(n);\r\n  }\r\n\r\n  // 写真情報設定\r\n  private async setPhotoInfo(locationID: number, photoID: number){\r\n    // 時系列写真情報リスト取得\r\n    //console.log(await this._indexedDbService.getTrnPhotoInfo());\r\n    this.photoInfoAllList = await this._indexedDbService.getTrnPhotoInfo();\r\n\r\n    // timeTrip情報を設定\r\n    if(this.photoInfoAllList){\r\n      this.photoInfoList = this.photoInfoAllList\r\n        .sort((a, b) => {    // 年の昇順\r\n          if( a.Year < b.Year ) return -1;\r\n          if( a.Year > b.Year ) return 1;\r\n          return 0;\r\n        })\r\n        .filter(f => f.LocationID == locationID);\r\n    }\r\n\r\n    // activeな写真情報\r\n    if(this.photoInfoList && this.photoInfoList.length > 0){\r\n      var tempPhotoInfo = this.photoInfoList.find(f => f.PhotoID == photoID);\r\n      this.photoInfo = tempPhotoInfo ? tempPhotoInfo : this.photoInfoList[0];\r\n    }\r\n  }\r\n\r\n  // 距離を測る関数\r\n  private getDistance (event) {\r\n\t  event.preventDefault();\r\n\r\n  \tvar touches = event.changedTouches;\r\n\r\n  \t// 2本以上の指の場合だけ処理\r\n  \tif ( touches.length > 1 ) {\r\n  \t\t// 座標1 (1本目の指)\r\n  \t\tvar x1 = touches[0].pageX;\r\n  \t\tvar y1 = touches[0].pageY;\r\n\r\n  \t\t// 座標2 (2本目の指)\r\n  \t\tvar x2 = touches[1].pageX;\r\n  \t\tvar y2 = touches[1].pageY;\r\n\r\n  \t\t// 2点間の距離\r\n  \t\treturn Math.sqrt( Math.pow( x2-x1, 2 ) + Math.pow( y2-y1, 2 ) ) ;\r\n  \t}\r\n\r\n  \treturn 1;\r\n  }\r\n}","module.exports = \"<ons-toolbar>\\r\\n  <div class=\\\"left\\\"><ons-back-button>Back</ons-back-button></div>\\r\\n  <div class=\\\"center\\\">写真アップロード</div>\\r\\n</ons-toolbar>\\r\\n\\r\\n<div class=\\\"content\\\">\\r\\n\\r\\n  <!-- 位置 -->\\r\\n  <ons-list>\\r\\n    <ons-list-item style=\\\"width: 100%;\\\">\\r\\n      <ons-button class=\\\"btn\\\" style=\\\"background:transparent; color: black; box-shadow: none;\\\" (click)=\\\"goToHome()\\\">\\r\\n        <i style=\\\"font-size: 30px\\\" class=\\\"material-icons\\\">home</i>\\r\\n      </ons-button>\\r\\n      {{ photoAddress }}\\r\\n    </ons-list-item>\\r\\n  </ons-list>\\r\\n\\r\\n    <!-- 写真 -->\\r\\n    <div id=\\\"previewArea\\\">\\r\\n      <img #photoPreview id=\\\"photoPreview\\\" style=\\\"width: 100%; height: auto; text-align: center\\\">\\r\\n      <!-- <amp-img #photoPreview [src]=\\\"binary\\\" id=\\\"photoPreview\\\" height=\\\"300\\\" width=\\\"300\\\" layout=\\\"responsive\\\" style=\\\"width: 100%; height: auto; text-align: center\\\"></amp-img> -->\\r\\n    </div>\\r\\n\\r\\n  <ons-list>\\r\\n    <!-- 写真の情報 -->\\r\\n    <!-- 年 -->\\r\\n    <ons-list-header>いつの写真？</ons-list-header>\\r\\n    <ons-list-item>\\r\\n      <ons-input type=\\\"tel\\\" style=\\\"width: 130px\\\" [(value)]=\\\"photoYear\\\"></ons-input>\\r\\n    </ons-list-item>\\r\\n    <!-- コメント -->\\r\\n    <ons-list-header>写真のコメント</ons-list-header>\\r\\n    <ons-list-item>\\r\\n      <ons-input type=\\\"textarea\\\" style=\\\"width: 100%\\\" [(value)]=\\\"photoComment\\\"></ons-input>\\r\\n    </ons-list-item>\\r\\n  </ons-list>\\r\\n\\r\\n  <!-- フッター -->\\r\\n  <div class=\\\"footer\\\">\\r\\n\\r\\n    <!-- 写真をアップロード -->\\r\\n    <ons-button id=\\\"uploadBtn\\\" class=\\\"btn\\\" style=\\\"background:transparent; color: black; box-shadow: none\\\" (click)=\\\"uploadPhotoConfirm();\\\">\\r\\n      <label style=\\\"font-size: 30px\\\" class=\\\"material-icons\\\">cloud_upload</label>\\r\\n    </ons-button>\\r\\n\\r\\n    <!-- 写真を開く -->\\r\\n    <ons-button id=\\\"openBtn\\\" class=\\\"btn\\\" style=\\\"background:transparent; color: black; box-shadow: none\\\" for=\\\"openPhoto\\\">\\r\\n      <label style=\\\"font-size: 30px\\\" class=\\\"material-icons\\\">\\r\\n        insert_photo\\r\\n        <input id=\\\"openPhoto\\\" style=\\\"display: none\\\" type=\\\"file\\\" (change)=\\\"changePhoto($event)\\\" [accept]=\\\"inputAccept\\\">\\r\\n      </label>\\r\\n    </ons-button>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\"","import { Component } from '@angular/core';\r\nimport { HttpService } from 'src/app/services/HttpService';\r\nimport { ReduceImageSizeService } from 'src/app/services/ReduceImageSizeService';\r\nimport { OnsNavigator, Params } from 'ngx-onsenui';\r\nimport { TimeTrip } from '../timeTrip/timeTrip';\r\nimport { Menu } from '../menu/menu';\r\n\r\nimport * as ons from 'onsenui';\r\n\r\n@Component({\r\n  selector: \"ons-page[title='upload']\",\r\n  templateUrl: './upload.html',\r\n  styleUrls: ['./upload.html']\r\n})\r\nexport class Upload {\r\n\r\n  photoLocationID: number = 0;\r\n  photoID: number = 0;\r\n  photoYear: number = 0;\r\n\r\n  photoAddress: string = '';\r\n  photoComment: string = '';\r\n  inputAccept: string = '';\r\n\r\n  binary;\r\n\r\n  constructor(private _navigator: OnsNavigator, private _httpService: HttpService, private _params: Params, private _reduceImageSizeService: ReduceImageSizeService) {}\r\n\r\n  async ngOnInit() {\r\n\r\n    // パラメタ取得\r\n    this.photoLocationID = this._params.data.LocationID;\r\n    this.photoAddress = this._params.data.Address;\r\n\r\n    // 年初期値\r\n    this.photoYear = new Date().getFullYear();\r\n\r\n    // Element情報設定\r\n    this.inputAccept = \"image/*\";\r\n\r\n  }\r\n\r\n  //#region 公開処理\r\n\r\n  // ファイル選択ボタン\r\n  public async changePhoto(event)\r\n  {\r\n    let size = 1024 * 300;\r\n    let files: File[] = event.target.files;\r\n    let file: File = files[0];\r\n\r\n    var imgElem: HTMLImageElement = document.getElementById('photoPreview') as HTMLImageElement;\r\n    if (file.size != null && file.size > size) {\r\n      console.log(\"changePhotoStart --reduce\");\r\n      let fileInfo = await this._reduceImageSizeService.reduceImageSize(file, size);\r\n      imgElem.src = fileInfo.fileDataUrl;\r\n      console.log(\"fileInfoEnd --reduce\");\r\n    }else{\r\n      console.log(\"changePhotoStart --normal\");\r\n      imgElem.src = await this._reduceImageSizeService.readDataUrl(file);\r\n      console.log(\"fileInfoEnd --normal\");\r\n    }\r\n\r\n    // var fileReader = new FileReader();\r\n    // fileReader.onload = function() {\r\n    //   console.log(\"3.画像ロードStart\");\r\n    //   var imgElem: HTMLImageElement = document.getElementById('photoPreview') as HTMLImageElement;\r\n    //   // var a = new Uint8Array(fileReader.result);\r\n    //   // imgElem.src = \"data:image/jpeg;base64,\" + a;\r\n    //   var b64 = btoa(fileReader.result.toString());\r\n    //   imgElem.src = \"data:image/jpeg;base64,\" + b64;\r\n    //   console.log(\"4.画像ロードOK\");\r\n    // }\r\n\r\n    // console.log(\"2.readBinaryStart\");\r\n    // fileReader.readAsBinaryString(file);\r\n    // //fileReader.readAsArrayBuffer(file);\r\n  }\r\n\r\n  // 写真アップロード\r\n  public uploadPhotoConfirm()\r\n  {\r\n\r\n    if (this.errorCheck() == false)\r\n    {\r\n      return;\r\n    }\r\n\r\n    ons.notification.confirm({\r\n      title: \"確認\",\r\n      message: \"写真をアップロードしますか？\",\r\n      cancelable: true,\r\n      callback: i => {\r\n        if (i == 1) {\r\n          this.uploadPhoto();\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  // ホームへ戻る\r\n  public goToHome(){\r\n    this._navigator.nativeElement.resetToPage(Menu);\r\n  }\r\n\r\n//#endregion\r\n\r\n//#region 非公開処理\r\n\r\n  // 写真情報DB登録処理\r\n  private async uploadPhoto()\r\n  {\r\n    try{\r\n      var imgElem: HTMLImageElement = document.getElementById('photoPreview') as HTMLImageElement;\r\n      var photoInfo: TimeTripPhotoInfo = null;\r\n\r\n      photoInfo = new TimeTripPhotoInfo()\r\n      photoInfo.Year = Number(this.photoYear);\r\n      photoInfo.LocationID = Number(this.photoLocationID);\r\n      photoInfo.Comment = this.photoComment;\r\n      photoInfo.Bin = imgElem.src;\r\n\r\n      var photo = await this._httpService.AddPhoto(Number(this.photoYear), Number(this.photoLocationID), this.photoComment, imgElem.src);\r\n      this.photoID = photo.photoID;\r\n\r\n      console.log('AddPhoto' + this.photoID)\r\n \r\n      ons.notification.alert({\r\n        title: 'ありがとう！',\r\n        message: '素敵な写真ですね！',\r\n        callback: i => {\r\n          ons.notification.toast('写真が更新されたよ！', { timeout: 1500, animation: 'fall' });\r\n          this.pageChange();\r\n        }\r\n      });\r\n\r\n    } catch (error) {\r\n      console.log(error);\r\n      return;\r\n    }\r\n  }\r\n\r\n  // アップロード後の画面遷移\r\n  private async pageChange() {\r\n    var p = this._navigator.nativeElement.pages.filter((page) => { return page.title == 'timetrip'; });\r\n    if(p.length > 0) {\r\n      // TimeTripページ経由であれば、１つ前の画面（TimeTripページ）に戻る\r\n      this._navigator.nativeElement.popPage({data: { LocationID: this.photoLocationID, PhotoID: this.photoID}});\r\n    } else {\r\n      // TimeTripページを経由していなければ、新たにTimeTripページを開く\r\n      this._navigator.nativeElement.replacePage(TimeTrip, {data: { LocationID: this.photoLocationID, PhotoID: this.photoID}});\r\n    }\r\n  }\r\n\r\n  // エラーチェック\r\n  private errorCheck()\r\n  {\r\n    var imgElem: HTMLImageElement = document.getElementById('photoPreview') as HTMLImageElement;\r\n    if (imgElem.src == \"\")\r\n    {\r\n      ons.notification.alert({title: 'お願い', message: 'アップロードする写真を選んでね！'})\r\n      return false;\r\n    }\r\n\r\n    if (!this.photoYear)\r\n    {\r\n      ons.notification.alert({title: 'お願い', message: 'いつの写真か入力してね！'})\r\n      return false;\r\n    };\r\n\r\n    if (isNaN(this.photoYear) == true)\r\n    {\r\n      ons.notification.alert({title: 'お願い', message: 'いつの写真かは数値で入力してね！'})\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n//#endregion\r\n\r\n}\r\n\r\nclass TimeTripPhotoInfo {\r\n  PhotoID: number;\r\n  Year: number;\r\n  LocationID: number;\r\n  Title: string;\r\n  Comment: string;\r\n  Bin: string;\r\n  LastUpdateDate: string;\r\n}\r\n","import {Injectable} from '@angular/core';\nimport {DexieService} from './ngx-dexie';\nimport {DexieDatabase} from './ngx-dexie/dexie.database';\n\n@Injectable()\nexport class DexieServiceEx extends DexieService {\n    constructor(private _db: DexieDatabase) {\n        super(_db);\n    }\n\n    where(table : string,index: string | string[]){\n        return this._db.table(table).where(index);\n    }\n\n    deleteDataBase() {\n        this._db.delete();\n    }\n\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class GetJsonService {\r\n    constructor(private http: HttpClient) {}\r\n\r\n    GetJson(fileName: string):Observable<any> {\r\n        var url = `./assets/initData/${fileName}.json`;\r\n        return this.http.get(url);\r\n    }\r\n\r\n}","import {AgmCoreModule, GoogleMapsAPIWrapper, MapsAPILoader} from '@agm/core';\nimport {NgZone, Injectable} from '@angular/core';\nimport { async } from 'rxjs/internal/scheduler/async';\nimport { resolveDep } from '@angular/core/src/view/provider';\n\nimport {} from 'googlemaps';\n\n@Injectable()\nexport class GoogleMapsAPIWrapperEx extends GoogleMapsAPIWrapper {\n    constructor(    private __loader :MapsAPILoader,\n        private __zone :NgZone) {\n            super(__loader, __zone);\n    }\n\n  async getAddress(lat, lng){\n      var sss;\n      console.log('1');\n      await this.__loader.load().then(async() => {\n          let geocoder = new google.maps.Geocoder();\n          \n          let latlng = new google.maps.LatLng(lat, lng);\n          console.log('2');\n          \n          sss = await new Promise((resolve, reject) => {\n              geocoder.geocode({ 'location': latlng}, function(results, status){\n            console.log('3');\n              if(status == google.maps.GeocoderStatus.OK){\n                  results.forEach(resultsData => {\n                      console.log(results);\n                  });\n                  resolve(results) ;\n              }else{\n                  console.log('住所を特定できなかった');\n                  reject([]);\n              }\n          });\n        }\n          ) \n          console.log('4');\n      })\n      console.log('5');\n      return sss;\n    }\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { extend } from 'webdriver-js-extender';\r\nimport { IndexedDbService } from './IndexedDbService';\r\nimport { promise } from 'protractor';\r\nimport { CommaExpr } from '@angular/compiler';\r\n\r\n@Injectable()\r\nexport class HttpService {\r\n\r\n    //private webApiEndPoint = \"http://172.16.0.50/TimeTripPhotoGallery.Web/api\";\r\n    private webApiEndPoint = \"http://test01.nisco.ne.jp/TimeTripPhotoGallery.Web/api\";\r\n\r\n    constructor(private http: HttpClient, private _indexedDbService: IndexedDbService) {}\r\n\r\n    /**\r\n     * DBに登録されている位置情報を取得して返します。\r\n     * @param latitude 現在地の緯度。\r\n     * @param longitude 現在地の経度。\r\n     * @param zoom 検索範囲（GoogleMAPのZoom値）、未指定時は全件。\r\n     */\r\n    async GetLocation(latitude: number, longitude: number, zoom: number): Promise<GetLocationResponseModel> {\r\n        let params = new HttpParams()\r\n            .append(\"Latitude\", String(latitude))\r\n            .append(\"Longitude\", String(longitude))\r\n            .append(\"Zoom\", zoom != null ? String(zoom) : \"\");\r\n\r\n        console.log(`緯度：${latitude}、経度：${longitude}、ズーム：${zoom}`);\r\n\r\n        let res = await this.http.get<GetLocationResponseModel>(`${this.webApiEndPoint}/GetLocation`, { params: params }).toPromise();\r\n        \r\n        // 取得成功時ローカルDBを更新する\r\n        if(res.statusCd == StatusCd.success && res.locations.length > 0){\r\n            let locationList: LocalLocationInfo[] = [];\r\n            for(let l of res.locations){\r\n                locationList.push({\r\n                    LocationID: l.locationID,\r\n                    Address: l.address,\r\n                    Latitude: l.latitude,\r\n                    Longitude: l.longitude\r\n                });\r\n            }\r\n            await this._indexedDbService.mergeMultipleLocationInfo(locationList);  \r\n        }\r\n\r\n        return {\r\n            statusCd: res.statusCd,\r\n            messages: res.messages,\r\n            locations: res.locations\r\n        };\r\n    }\r\n\r\n    /**\r\n     * 新しい位置情報をDBに登録して採番した位置IDを返します。\r\n     * @param title 入力されたタイトル。\r\n     * @param address 位置の住所。\r\n     * @param latitude ピンを立てた位置の緯度。\r\n     * @param longitude ピンを立てた位置の経度\r\n     */\r\n    async AddLocation(title: string, address: string, latitude: number, longitude: number): Promise<AddLocationResponseModel> {\r\n        let params = new HttpParams()\r\n        .append(\"Title\", title)\r\n        .append(\"Address\", address)\r\n        .append(\"Latitude\", String(latitude))\r\n        .append(\"Longitude\", String(longitude));\r\n\r\n        var res = await this.http.put<AddLocationResponseModel>(`${this.webApiEndPoint}/AddLocation`, params).toPromise();\r\n\r\n        // ローカルDBにInsertする\r\n        if(res.statusCd == StatusCd.success){\r\n            let location: LocalLocationInfo = {\r\n                LocationID: res.locationID,\r\n                Address: address,\r\n                Latitude: latitude,\r\n                Longitude: longitude\r\n            }\r\n            await this._indexedDbService.addOneLocationInfo(location);\r\n        }\r\n\r\n        return {\r\n            statusCd: res.statusCd,\r\n            messages: res.messages,\r\n            locationID: res.locationID\r\n        };\r\n    }\r\n\r\n    /**\r\n     * DBに登録されている写真情報を取得して返します。\r\n     * @param locationID 取得したい写真の位置を特定するキー。\r\n     * @param photoID 取得したい写真を特定するキー、未指定時はすべての写真が対象となる。\r\n     */\r\n    async GetPhoto(locationID: number, photoID: number): Promise<GetPhotoResponseModel> {\r\n        let params = new HttpParams()\r\n            .append(\"LocationID\", String(locationID))\r\n            .append(\"PhotoID\", photoID != null ? String(photoID) : \"\");\r\n\r\n        var res = await this.http.get<GetPhotoResponseModel>(`${this.webApiEndPoint}/GetPhoto`, { params: params }).toPromise();\r\n\r\n        // 取得成功時ローカルDBを更新する\r\n        if(res.statusCd == StatusCd.success && res.photos.length > 0){\r\n            let photoList: LocalPhotoInfo[] = [];\r\n            for(let p of res.photos){\r\n                photoList.push({\r\n                    PhotoID: p.photoID,\r\n                    LocationID: locationID,\r\n                    Year: p.year,\r\n                    Comment: p.comment,\r\n                    Bin:  decodeURIComponent(p.bin)\r\n                });\r\n            }\r\n            await this._indexedDbService.mergeMultiplePhotoInfo(photoList);\r\n        }\r\n\r\n        return {\r\n            statusCd: res.statusCd,\r\n            messages: res.messages,\r\n            photos: res.photos   \r\n        };\r\n    }\r\n    \r\n    /**\r\n     * 新しい写真情報をDBに登録して採番した位置IDを返します。\r\n     * @param year 入力された年。\r\n     * @param locationID 追加する写真の位置を識別するキー。\r\n     * @param comment 入力されたコメント。\r\n     * @param bin 写真のバイナリデータ。\r\n     */\r\n    async AddPhoto(year: number, locationID: number, comment: string, bin: string): Promise<AddPhotoResponseModel> {\r\n        let params = new HttpParams()\r\n            .append(\"Year\", String(year))\r\n            .append(\"LocationID\", String(locationID))\r\n            .append(\"Comment\", comment)\r\n            .append(\"Bin\", encodeURIComponent(bin));\r\n        let headers = new HttpHeaders().set('Authorization', `Bearer ${''}`);\r\n\r\n        let res = await this.http.put<AddPhotoResponseModel>(`${this.webApiEndPoint}/AddPhoto`, params, {headers: headers}).toPromise();\r\n        \r\n        // ローカルDBにInsertする\r\n        if(res.statusCd == StatusCd.success){\r\n            let photo: LocalPhotoInfo = {\r\n                PhotoID: res.photoID,\r\n                LocationID: locationID,\r\n                Year: year,\r\n                Comment: comment,\r\n                Bin: bin\r\n            }\r\n            await this._indexedDbService.addOnePhotoInfo(photo);\r\n        }\r\n\r\n        return {\r\n            statusCd: res.statusCd,\r\n            messages: res.messages,\r\n            photoID: res.photoID\r\n        };\r\n    }    \r\n}\r\n\r\n//#region 型定義情報\r\n\r\n/**\r\n * TimeTripPhotoGalleryのサーバ側の処理の結果を表します。\r\n */\r\nexport enum StatusCd {\r\n    /**\r\n     * 処理が正常に終了したことを表します。\r\n     */\r\n    success = \"0\",\r\n    /**\r\n     * 要求パラメータ等の検証を行った結果、エラーがあったことを表します。\r\n     */\r\n    validationError = \"101\"\r\n}\r\n\r\n/**\r\n * TimeTripPhotoGalleryで使用する形式に加工した位置情報。\r\n */\r\nexport class LocationModel {\r\n    /**\r\n     * 位置情報を特定するためのキー。\r\n     */\r\n    locationID: number;\r\n    /**\r\n     * 登録時に入力されたタイトル。\r\n     */\r\n    title: string;\r\n    /**\r\n     * 位置情報の住所。\r\n     */    \r\n    address: string;\r\n    /**\r\n     * 位置情報の緯度。\r\n     */    \r\n    latitude: number;\r\n    /**\r\n     * 位置情報の経度。\r\n     */    \r\n    longitude: number;\r\n    /**\r\n     * 現在地から見た位置情報までの距離（メートル）。\r\n     */    \r\n    distance: number;\r\n}\r\n\r\n/**\r\n * TimeTripPhotoGalleryで使用する形式に加工した写真情報。\r\n */\r\nexport class PhotoModel {\r\n    /**\r\n     * 写真情報を特定するためのキー。\r\n     */\r\n    photoID: number;    \r\n    /**\r\n     * 写真の年。\r\n     */\r\n    year: number;\r\n    /**\r\n     * 写真のコメント。\r\n     */\r\n    comment: string;\r\n    /**\r\n     * 写真のバイナリ情報（DataURI形式）。\r\n     */\r\n    bin: string;\r\n}\r\n\r\n//#endregion\r\n\r\n//#region 応答パラメータ\r\n\r\n/**\r\n * 応答パラメータモデル。\r\n */\r\nexport class HttpResponseModel {\r\n    statusCd: StatusCd;\r\n    messages: string[];\r\n}\r\n\r\n/**\r\n * GetLocationの応答パラメータモデル。\r\n */\r\nexport class GetLocationResponseModel extends HttpResponseModel {\r\n    locations: LocationModel[];\r\n}\r\n\r\n/**\r\n * AddLocationの応答パラメータモデル。\r\n */\r\nexport class AddLocationResponseModel extends HttpResponseModel {\r\n    locationID: number;\r\n}\r\n\r\n/**\r\n * GetPhotoの応答パラメータモデル。\r\n */\r\nexport class GetPhotoResponseModel extends HttpResponseModel {\r\n    photos: PhotoModel[];\r\n}\r\n\r\n/**\r\n * AddPhotoの応答パラメータモデル。\r\n */\r\nexport class AddPhotoResponseModel extends HttpResponseModel {\r\n    photoID: number;\r\n}\r\n\r\n//#endregion\r\n\r\n//#region localDBの型定義情報\r\nexport class LocalLocationInfo {\r\n    LocationID: number;\r\n    Address: string;\r\n    Latitude: number;\r\n    Longitude: number;\r\n  }\r\n  \r\nexport class LocalPhotoInfo {\r\n  PhotoID: number;\r\n  Year: number;\r\n  LocationID: number;\r\n  Comment: string;\r\n  Bin: string;\r\n}\r\n//#endregion","import {Injectable} from '@angular/core';\r\nimport {DexieService} from 'ngx-dexie';\r\nimport {DexieServiceEx} from './DexieServiceEx';\r\n\r\n@Injectable()\r\nexport class IndexedDbService {\r\n // https://www.npmjs.com/package/ngx-dexie\r\n    constructor(private dexieService: DexieServiceEx) {}\r\n\r\n    private readonly flg : string = '1';\r\n    private readonly CheakInitData : string = 'CheakInitData';\r\n    private readonly MstLocationInfo : string = 'MstLocationInfo';\r\n    private readonly TrnPhotoInfo : string = 'TrnPhotoInfo';\r\n    \r\n    public async cheakInitData() {\r\n        var data = null;\r\n        await this.dexieService.getByPrimaryKey(this.CheakInitData, this.flg, (item) => {\r\n            data = item;\r\n        });\r\n        \r\n        if(data){          \r\n          return false;\r\n        }\r\n        \r\n        return true;\r\n    }\r\n\r\n    public cheakedInitData() {\r\n        this.dexieService.addOne(this.CheakInitData,{\"ID\":this.flg});\r\n    }\r\n\r\n    public addMultipleLocationInfo(locationInfoObjects: Object[]) {\r\n        this.dexieService.addMultiple(this.MstLocationInfo,locationInfoObjects);\r\n    }\r\n\r\n    public mergeMultipleLocationInfo(locationInfoObjects: Object[]){\r\n        this.dexieService.addOrUpdateMultiple(this.MstLocationInfo,locationInfoObjects);\r\n    }\r\n\r\n    public async addOneLocationInfo(LocationInfoObject: Object) {\r\n        var result = await this.dexieService.addOne(this.MstLocationInfo,LocationInfoObject);\r\n        return result;\r\n     }\r\n\r\n    public async addOnePhotoInfo(photoInfoObject: Object) {\r\n       var result = await this.dexieService.addOne(this.TrnPhotoInfo,photoInfoObject);\r\n       return result;\r\n    }\r\n\r\n    public addMultiplePhotoInfo(photoInfoObjects: Object[]) {\r\n        this.dexieService.addMultiple(this.TrnPhotoInfo,photoInfoObjects);\r\n    }\r\n\r\n    public mergeMultiplePhotoInfo(photoInfoObjects: Object[]) {\r\n        this.dexieService.addOrUpdateMultiple(this.TrnPhotoInfo,photoInfoObjects);\r\n    }    \r\n\r\n    public async getTrnPhotoInfoByKey(key: string) {\r\n        var data = null;\r\n        await this.dexieService.getByPrimaryKey(this.TrnPhotoInfo, key, (item) => {\r\n            data = item;\r\n        });\r\n\r\n        return data;\r\n    }\r\n\r\n    public async countLocationInfo() {\r\n        return await this.dexieService.count(this.MstLocationInfo);\r\n    }\r\n\r\n    // 位置情報マスタ全件取得\r\n    public async getMstLocationInfo(){\r\n        return await this.dexieService.toArray(this.MstLocationInfo);\r\n    }\r\n\r\n    // 登録されている画像を全取得する\r\n    public async getTrnPhotoInfo() {\r\n        return await this.dexieService.toArray(this.TrnPhotoInfo);\r\n    }\r\n\r\n    // 指定した座標付近のマスタを取得する\r\n    public async getMstLocationByRange(latitude:number, longitude:number){\r\n        var half:number = 0.015;\r\n        var data = await this.dexieService\r\n            .where(this.MstLocationInfo,'Latitude').between(latitude-half,latitude+half)\r\n            .and((data) => {\r\n                return longitude-half <= data.Longitude && data.Longitude <= longitude+half;\r\n            })\r\n        return data.toArray();\r\n    }\r\n\r\n    public deleteDatabase() {\r\n        this.dexieService.deleteDataBase();\r\n    }\r\n\r\n    public deleteAllMstLocationInfo(){\r\n        this.dexieService.clearAll(this.MstLocationInfo);\r\n    }\r\n\r\n    public deleteAllTrnPhotoInfo(){\r\n        this.dexieService.clearAll(this.TrnPhotoInfo);\r\n    }\r\n\r\n    public deleteMstLocationInfoMutiple(keys: number[]) {\r\n        this.dexieService.deleteMultiple(this.MstLocationInfo, keys);\r\n    }\r\n\r\n    public deleteTrnPhotoInfoMutiple(keys: number[]) {\r\n        this.dexieService.deleteMultiple(this.TrnPhotoInfo, keys);\r\n    }\r\n\r\n    // 画像をマスタ登録する\r\n    public createMstImg(locationInfoObjects: Object){\r\n        this.dexieService.addOne(this.MstLocationInfo, locationInfoObjects);       \r\n    }\r\n}","import { Injectable } from '@angular/core';\r\n\r\n/**\r\n * 画像ファイルサイズ削減サービス\r\n */\r\n@Injectable()\r\nexport class ReduceImageSizeService {\r\n    \r\n    /**\r\n     * 画像ファイルサイズ削減\r\n     * @param target 対象\r\n     */\r\n    reduceImageSize(target: File, size: number): Promise<FileInfo> {\r\n        var info = this.ConvertFileInfo(target);\r\n\r\n        var comp = this;\r\n\r\n        const p1 = new Promise<FileInfo>((resolve, reject) => {\r\n            // 画像ファイル以外は処理中止\r\n            if (!target.type || target.type.trim() == '' || !target.type.match(/^image\\/.*$/)) {\r\n                resolve(info);\r\n            }\r\n\r\n            try {\r\n                var image = new Image();\r\n                var reader = new FileReader();\r\n\r\n                reader.onloadend = function () {\r\n                    image.onload = function () { // 画像が読み込めた時の処理\r\n                        // canvasの要素を生成\r\n                        var canvas = document.createElement(\"canvas\");\r\n\r\n                        // 2次元コンテキストを取得\r\n                        var ctx = canvas.getContext('2d');\r\n                        // 縮小する割合を指定\r\n                        var scale = (size / target.size) * Math.sqrt(2);\r\n\r\n                        var imageWidth = Math.round(image.width * scale);\r\n                        var imageHeight = Math.round(image.height * scale);\r\n\r\n                        canvas.width = imageWidth;\r\n                        canvas.height = imageHeight;\r\n\r\n                        // 画像imageのサイズを縮小する\r\n                        // drawImage(画像, x座標, y座標, 幅, 高さ)で画像サイズを変更\r\n                        ctx.clearRect(0, 0, imageWidth, imageHeight);\r\n                        ctx.drawImage(image, 0, 0, imageWidth, imageHeight);\r\n                        \r\n                        var base64 = canvas.toDataURL(target.type);\r\n                        var tmp = base64.split(',');\r\n                        if (!tmp[1]) {\r\n                            resolve(info);\r\n                        }\r\n\r\n                        // base64データの文字列をデコード\r\n                        var data = atob(tmp[1]);\r\n                        // tmp[0]の文字列（data:image/png;base64）からコンテンツタイプ（image/png）部分を取得\r\n                        var mime = tmp[0].split(':')[1].split(';')[0];\r\n                        //  1文字ごとにUTF-16コードを表す 0から65535 の整数を取得\r\n\r\n                        var buf = new Uint8Array(data.length);\r\n                        for (var i = 0; i < data.length; i++) {\r\n                            buf[i] = data.charCodeAt(i);\r\n                        }\r\n                        info.fileDataUrl = base64;\r\n                        info.fileSize = buf.byteLength;\r\n\r\n                        // IE 非対応\r\n                        //var ret: File = new File([buf], target.name, { type: target.type });\r\n\r\n                        resolve(info);\r\n                    }\r\n                    image.src = reader.result;\r\n                }\r\n                reader.readAsDataURL(target);\r\n            }\r\n            catch(e) {\r\n                reject(info);\r\n            }\r\n                \r\n        }).then(\r\n            // Promiseが成功したとき\r\n            (value: FileInfo) => { // 引数valueの型はProcese<T>のT型\r\n                return value;\r\n            }\r\n        ).catch(\r\n            // Promiseが失敗したとき\r\n            (reason: any) => {\r\n                return info;\r\n            }\r\n        );\r\n\r\n        return p1;\r\n    }\r\n\r\n    ConvertFileInfo(target: File): FileInfo {\r\n        var ret = new FileInfo();\r\n            \r\n        var reader = new FileReader();\r\n\r\n        var comp = this;\r\n        reader.onloadend = function () {\r\n            ret.fileDataUrl = reader.result;\r\n            ret.fileName = target.name;\r\n            ret.fileSize = target.size;\r\n            ret.fileType = target.type;\r\n\r\n            return ret;\r\n        }\r\n        reader.readAsDataURL(target);\r\n\r\n        return ret;\r\n    }\r\n\r\n    readDataUrl(blob): Promise<string> {\r\n        var fr = new FileReader()\r\n        var pr = new Promise<string>((resolve, reject) => {\r\n            fr.onload = eve => {\r\n                resolve(fr.result)\r\n            }\r\n            fr.onerror = eve => {\r\n                reject(fr.error)\r\n            }\r\n        })\r\n\r\n        fr.readAsDataURL(blob)\r\n        return pr\r\n    }\r\n}\r\n\r\nexport class FileInfo {\r\n    //ファイル名\r\n    public fileName: string;\r\n    //ファイルタイプ\r\n    public fileType: string;\r\n    //ファイル内容\r\n    public fileDataUrl: string;\r\n    //ファイルサイズ\r\n    public fileSize?: number;\r\n\r\n}","import {Injectable,EventEmitter,Inject} from '@angular/core';\nimport Dexie from 'dexie';\n\nimport {DexieConfig} from './dexieConfig';\nimport {DEXIE_CONFIG_TOKEN} from './dexie.module';\n\n@Injectable()\nexport class DexieDatabase extends Dexie {\n\n    constructor(@Inject(DEXIE_CONFIG_TOKEN) config: DexieConfig) {\n        const databaseName: string = config.databaseName;\n        const schema: any = config.schema;\n\n        super(databaseName);\n\n        this.version(1).stores(schema);\n    }\n\n}","import {NgModule,ModuleWithProviders,InjectionToken} from '@angular/core';\n\nimport {DexieDatabase} from './dexie.database';\nimport {DexieService} from './dexie.service';\nimport {DexieConfig} from './dexieConfig';\n\nexport function DexieFactory(config: DexieConfig) {\n    return new DexieDatabase(config);\n}\n\nexport const DEXIE_CONFIG_TOKEN = new InjectionToken<DexieConfig>('__DEXIE_CONFIG__');\n\n@NgModule({})\nexport class DexieModule {\n\n    static forRoot(config: DexieConfig): ModuleWithProviders {\n        return {\n            ngModule: DexieModule,\n            providers: [\n                {provide: DEXIE_CONFIG_TOKEN,useValue: config},\n                {\n                    provide: DexieDatabase,\n                    useFactory: DexieFactory,\n                    deps: [DEXIE_CONFIG_TOKEN]\n                },\n                DexieService\n            ]\n        };\n    }\n}","import {Injectable} from '@angular/core';\nimport {DexieDatabase} from './dexie.database';\n\n@Injectable()\nexport class DexieService {\n    \n    constructor(private db: DexieDatabase) {}\n\n    addOne(table: string,object: Object) {\n        return this.db.table(table).add(object);\n    }\n\n    addMultiple(table: string,objects: Object[]) {\n        return this.db.table(table).bulkAdd(objects);\n    }\n\n    count(table: string) {\n        return this.db.table(table).count();\n    }\n\n    addOrUpdateOne(table: string,object: Object,key?: any) {\n        if(key) {\n            return this.db.table(table).put(object,key);\n        } else {\n            return this.db.table(table).put(object);\n        }\n    }\n\n    addOrUpdateMultiple(table: string,objects: Object[],keys?: any) {\n        if(keys) {\n            return this.db.table(table).bulkPut(objects,keys);\n        } else {\n            return this.db.table(table).bulkPut(objects);\n        }\n    }\n\n    deleteOne(table: string,primaryKey: any) {\n        return this.db.table(table).delete(primaryKey);\n    }\n\n    deleteMultiple(table: string,primaryKeys: any[]) {\n        return this.db.table(table).bulkDelete(primaryKeys);\n    }\n\n    clearAll(table: string) {\n        return this.db.table(table).clear();\n    }\n\n    operateOnEach(table: string,callback: (item: any,idbCursor: any) => any) {\n        return this.db.table(table).each(callback);\n    }\n\n    filter(table: string,filterFunction: (value: any) => boolean) {\n        return this.db.table(table).filter(filterFunction);\n    }\n\n    getByPrimaryKey(table: string,primaryKey: any,callback?: (item: Object) => any) {\n        if(callback) {\n            return this.db.table(table).get(primaryKey,callback);\n        } else {\n            return this.db.table(table).get(primaryKey);\n        }\n    }\n\n    getByKeyToValueMap(table: string,keyValueMap: Object,callback?: (item: Object) => any) {\n        if(callback) {\n            return this.db.table(table).get(keyValueMap,callback);\n        } else {\n            return this.db.table(table).get(keyValueMap);\n        }\n    }\n\n    getFirstNItemsOfTable(table: string,num: number) {\n        return this.db.table(table).limit(num);\n    }\n\n    orderBy(table: string,index: string) {\n        return this.db.table(table).orderBy(index);\n    }\n\n    offset(table: string,ignoreUpto: number) {\n        return this.db.table(table).offset(ignoreUpto);\n    }\n\n    reverse(table: string) {\n        return this.db.table(table).reverse();\n    }\n\n    toArray(table: string,callback?: (objects: Object[]) => any) {\n        if(callback) {\n            return this.db.table(table).toArray(callback);\n        } else {\n            return this.db.table(table).toArray();\n        }\n    }\n\n    toCollection(table: string) {\n        return this.db.table(table).toCollection();\n    }\n\n    update(table: string,key: any,changes: Object) {\n        return this.db.table(table).update(key,changes);\n    }\n\n}","export { DexieModule } from './dexie.module';\nexport { DexieDatabase } from './dexie.database';\nexport { DexieService } from './dexie.service';\n//# sourceMappingURL=index.js.map","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}